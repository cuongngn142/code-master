<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Giải Bài Tập | Code Master</title>
    <link rel="stylesheet" href="/css/style.css" />
    <link rel="stylesheet" href="/css/solve.css" />
    <!-- Thêm Monaco Editor -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.30.1/min/vs/loader.min.js"></script>
  </head>
  <body>
    <header class="header fixed"><%- include('partials/header') %></header>

    <main class="solve-main">
      <div class="main-content">
        <div class="problem-section">
          <h1><%= baiTap.TieuDe %></h1>
          <div class="problem-meta">
            <span class="difficulty">Độ khó: <%= baiTap.MucDoKho %></span>
            <span class="topic">Chủ đề: <%= baiTap.TenChuDe %></span>
          </div>
          <div class="problem-description"><%= baiTap.MoTa %></div>
        </div>

        <div class="code-section">
          <div class="code-header">
            <select id="language">
              <% ngonNgu.forEach(function(lang) { %>
              <option value="<%= lang.TenNgonNgu %>">
                <%= lang.TenNgonNgu %>
              </option>
              <% }); %>
            </select>
            <button onclick="runCode()" id="runBtn">Chạy thử</button>
          </div>
          <div id="editor"></div>
          <div id="result" class="hidden">
            <h3>Kết quả:</h3>
            <div class="result-content"></div>
          </div>
        </div>
      </div>
    </main>

    <script>
      require.config({
        paths: {
          vs: "https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.30.1/min/vs",
        },
      });

      let editor;

      // Khởi tạo Monaco Editor
      require(["vs/editor/editor.main"], function () {
        editor = monaco.editor.create(document.getElementById("editor"), {
          value: "// Viết code của bạn ở đây",
          language: "javascript", // Mặc định là JavaScript
          theme: "vs-dark",
          automaticLayout: true,
        });

        // Gắn sự kiện "click" cho nút "Chạy thử"
        document
          .getElementById("runBtn")
          .addEventListener("click", function () {
            runCode();
          });
      });

      async function runCode() {
        // Kiểm tra xem Monaco Editor đã được khởi tạo chưa
        if (!editor) {
          console.error("Editor chưa được khởi tạo.");
          return;
        }

        const code = editor.getValue(); // Lấy mã từ Monaco Editor
        const language = document.getElementById("language").value; // Lấy ngôn ngữ từ dropdown
        let version = "";

        // Thiết lập phiên bản dựa trên ngôn ngữ
        switch (language) {
          case "javascript":
            version = "18.15.0"; // Node.js version
            break;
          case "nodejs":
            version = "18.15.0"; // Node.js version
            break;
          case "python3":
            version = "3.10.0"; // Python 3 version
            break;
          case "java":
            version = "15.0.2"; // Java version
            break;
          default:
            version = "*"; // Default version for others
            break;
        }

        // Gửi yêu cầu API để chạy mã
        const response = await fetch("https://emkc.org/api/v2/piston/execute", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            language: language, // Ngôn ngữ chọn
            version: version, // Phiên bản của ngôn ngữ
            files: [
              {
                name: "main", // Tên file chính
                content: code, // Mã code từ Monaco Editor
              },
            ],
          }),
        });

        // Xử lý kết quả trả về từ API
        const result = await response.json();

        // Hiển thị kết quả
        const resultDiv = document.getElementById("result");
        resultDiv.classList.remove("hidden");

        // Kiểm tra nếu có lỗi trả về
        if (result.error) {
          resultDiv.querySelector(".result-content").innerHTML = ` 
            <p><strong>Đã có lỗi xảy ra:</strong></p>
            <pre>${result.error}</pre>
          `;
        } else {
          resultDiv.querySelector(".result-content").innerHTML = ` 
            <p><strong>Output:</strong></p>
            <pre>${result.run.stdout}</pre>
          `;
        }
      }
    </script>
  </body>
</html>
